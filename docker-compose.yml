version: "3"
services:
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    image: traefik:1.4-alpine
    command:
    - --configfile=/etc/traefik.toml
    - --debug
    volumes:
    - ./services/traefik/traefik.toml:/etc/traefik.toml
    - ./bin/tls:/certs
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
    - 80:80
    - 443:443
    - 8080:8080

  vault:
    image: vault
    environment:
    - VAULT_DEV_ROOT_TOKEN_ID=root
    - VAULT_DEV_LISTEN_ADDRESS=127.0.0.1:8800
    cap_add:
    - IPC_LOCK
    ports:
    - 8200:8200
    volumes:
    - ./bin/tls:/certs
    - ./services/vault/vault.hcl:/vault/config/local.hcl
    - ./services/vault/policies:/vault/config/policies

  vaultui:
    image: djenriquez/vault-ui
    environment:
    - VAULT_URL_DEFAULT=https://vault:8200
    - VAULT_AUTH_DEFAULT=TOKEN
    - NODE_TLS_REJECT_UNAUTHORIZED=0
    depends_on:
    - vault

  localAuth:
    build:
      context: .
    image: golang
    depends_on:
    - cloudAuth
    command:
    - /wwm/localAuth
    volumes:
    - ./.bin/:/wwm
    - ./.data/localAuth:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/localAuth-key.pem
    - CERT_PATH=/certs/localAuth.pem
    - AUTH_SYNC_KEY_PATH=/certs/localAuthSync-key.pem
    - AUTH_SYNC_CERT_PATH=/certs/localAuthSync.pem

  localStorage:
    image: golang:1.9-alpine
    command:
    - /wwm/localStorage
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/localStorage-key.pem
    - CERT_PATH=/certs/localStorage.pem

  localMinio:
    image: minio/minio
    command:
    - server
    - /data
    environment:
    - MINIO_ACCESS_KEY=local
    - MINIO_SECRET_KEY=localminio
    ports:
    - 9000:9000
    volumes:
    - ./bin/tls/localMinio-key.pem:/root/.minio/certs/private.key
    - ./bin/tls/localMinio.pem:/root/.minio/certs/public.crt
    - ./.data/localMinio:/data

  cloudStorage:
    image: golang:1.9-alpine
    command:
    - /wwm/cloudStorage
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/cloudStorage-key.pem
    - CERT_PATH=/certs/cloudStorage.pem

  cloudMinio:
    image: minio/minio
    command:
    - server
    - /data
    environment:
    - MINIO_ACCESS_KEY=cloud
    - MINIO_SECRET_KEY=cloudminio
    volumes:
    - ./bin/tls/cloudMinio-key.pem:/root/.minio/certs/private.key
    - ./bin/tls/cloudMinio.pem:/root/.minio/certs/public.crt
    - ./.data/cloudMinio:/data

  cloudAuth:
    build:
      context: .
    image: golang
    command:
    - /wwm/cloudAuth
    volumes:
    - ./.bin/:/wwm
    - ./.data/cloudAuth:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - ./cmd/cloudAuth/serviceCertsAndPaths.yml:/serviceCertsAndPaths.yml:ro
    environment:
    - KEY_PATH=/certs/cloudAuth-key.pem
    - CERT_PATH=/certs/cloudAuth.pem

  localNats:
    image: nats-streaming
    ports:
    - 4242:4242
    - 8282:8282
    command:
    - --stan_config=/etc/nats/config.conf
    volumes:
    - ./services/localNats/config.conf:/etc/nats/config.conf:ro
    - ./.data/localNats:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro

  storageSync:
    image: golang:1.9-alpine
    command:
    - /wwm/storageSync
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/storageSync-key.pem
    - CERT_PATH=/certs/storageSync.pem

  localPrometheus:
    image: prom/prometheus
    command:
    - --config.file=/etc/prometheus/config.yml
    - --storage.tsdb.path=/data
    volumes:
    - ./services/localPrometheus/config.yml:/etc/prometheus/config.yml:ro
    - ./services/localPrometheus/rules.yml:/etc/prometheus/rules.yml:ro
    - ./.data/localPrometheus:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro

  cloudPrometheus:
    image: prom/prometheus
    command:
    - --config.file=/etc/prometheus/config.yml
    - --storage.tsdb.path=/data
    volumes:
    - ./services/cloudPrometheus/config.yml:/etc/prometheus/config.yml:ro
    - ./services/cloudPrometheus/rules.yml:/etc/prometheus/rules.yml:ro
    - ./.data/cloudPrometheus:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro

  natsStreamingExporter:
    image: registry.gitlab.com/civist/nats-streaming-exporter
    command:
    - /nats-streaming-exporter
    - -nats-uri=http://localNats:8282/
    ports:
    - 9275:9275

  batchStorageSync:
    image: golang:1.9-alpine
    command:
    - /wwm/batchStorageSync
    volumes:
    - ./.bin/:/wwm
    - ./.data/batchStorageSync:/data/
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/batchStorageSync-key.pem
    - CERT_PATH=/certs/batchStorageSync.pem

  localPrometheusPushGateway:
    image: prom/pushgateway

  waitlist:
    build:
      context: .
    image: golang
    command:
    - /wwm/waitlist
    volumes:
    - ./.bin/:/wwm
    - ./.data/waitlist:/data
    - ./bin/tls/waitlist-key.pem:/certs/private.key:ro
    - ./bin/tls/waitlist.pem:/certs/public.crt:ro

  localStatusReporter:
    image: golang:1.9-alpine
    command:
    - /wwm/localStatusReporter
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - ./cmd/localStatusReporter/statusReporterComponents.yml:/components.yml:ro
    environment:
    - KEY_PATH=/certs/localStatusReporter-key.pem
    - CERT_PATH=/certs/localStatusReporter.pem

  postgres:
    build:
      context: .
      dockerfile: ./services/postgres/Dockerfile
    volumes:
    - ./services/postgres:/docker-entrypoint-initdb.d
    ports:
    - 5432:5432
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=root

  localDiscovery:
    image: golang:1.9-alpine
    command:
    - /wwm/localDiscovery
    volumes:
    - ./.bin/:/wwm
    - ./.data/localDiscovery:/var/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - VAULT_TOKEN=LOCAL-DISCOVERY-TOKEN
    - VAULT_DB_ROLE=localDiscoveryService
    - KEY_PATH=/certs/localDiscovery-key.pem
    - CERT_PATH=/certs/localDiscovery.pem
    # - DEBUG=1

  cloudDiscovery:
    image: golang:1.9-alpine
    command:
    - /wwm/cloudDiscovery
    volumes:
    - ./.bin/:/wwm
    - ./.data/cloudDiscovery:/var/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - VAULT_TOKEN=CLOUD-DISCOVERY-TOKEN
    - VAULT_DB_ROLE=cloudDiscoveryService
    - KEY_PATH=/certs/cloudDiscovery-key.pem
    - CERT_PATH=/certs/cloudDiscovery.pem
    - AUTH_HOST=cloudAuth
    # - DEBUG=1

  pgweb:
    image: sosedoff/pgweb
    ports:
    - 8081:8081
    command:
    - /usr/bin/pgweb
    - --bind=0.0.0.0
    - --listen=8081
    - --url=postgres://root:root@postgres:5432/localdiscovery?sslmode=require

  localSymmetric:
    build:
      context: services/symmetric
      dockerfile: Dockerfile
    image: symmetric
    command:
    - /root/bin/local.sh
    volumes:
    - ./services/symmetric/engines:/opt/symmetric/engines:ro
    - ./services/symmetric/samples:/opt/symmetric/samples:ro
    - ./services/symmetric/bin:/root/bin:ro
    - ./services/symmetric/log4j.xml:/opt/symmetric/conf/log4j.xml:ro
    depends_on:
    - postgres

  cloudSymmetric:
    build:
      context: services/symmetric
      dockerfile: Dockerfile
    image: symmetric
    command:
    - /root/bin/cloud.sh
    volumes:
    - ./services/symmetric/engines:/opt/symmetric/engines:ro
    - ./services/symmetric/samples:/opt/symmetric/samples:ro
    - ./services/symmetric/bin:/root/bin:ro
    - ./services/symmetric/log4j.xml:/opt/symmetric/conf/log4j.xml:ro
    depends_on:
    - postgres

  waiter:
    image: martin/wait:latest
